# -*- coding: utf-8 -*- 
import math

 
def score_template(template):
    
    context_cases = [
    # pasted/typed table from PDF and converted to zero-based positions
    (1,'g',-0.2753771),(2,'a',-0.3238875),(2,'c',0.17212887),(3,'c',-0.1006662),
    (4,'c',-0.2018029),(4,'g',0.24595663),(5,'a',0.03644004),(5,'c',0.09837684),
    (6,'c',-0.7411813),(6,'g',-0.3932644),(11,'a',-0.466099),(14,'a',0.08537695),
    (14,'c',-0.013814),(15,'a',0.27262051),(15,'c',-0.1190226),(15,'t',-0.2859442),
    (16,'a',0.09745459),(16,'g',-0.1755462),(17,'c',-0.3457955),(17,'g',-0.6780964),
    (18,'a',0.22508903),(18,'c',-0.5077941),(19,'g',-0.4173736),(19,'t',-0.054307),
    (20,'g',0.37989937),(20,'t',-0.0907126),(21,'c',0.05782332),(21,'t',-0.5305673),
    (22,'t',-0.8770074),(23,'c',-0.8762358),(23,'g',0.27891626),(23,'t',-0.4031022),
    (24,'a',-0.0773007),(24,'c',0.28793562),(24,'t',-0.2216372),(27,'g',-0.6890167),
    (27,'t',0.11787758),(28,'c',-0.1604453),(29,'g',0.38634258),(1,'gt',-0.6257787),
    (4,'gc',0.30004332),(5,'aa',-0.8348362),(5,'ta',0.76062777),(6,'gg',-0.4908167),
    (11,'gg',-1.5169074),(11,'ta',0.7092612),(11,'tc',0.49629861),(11,'tt',-0.5868739),
    (12,'gg',-0.3345637),(13,'ga',0.76384993),(13,'gc',-0.5370252),(16,'tg',-0.7981461),
    (18,'gg',-0.6668087),(18,'tc',0.35318325),(19,'cc',0.74807209),(19,'tg',-0.3672668),
    (20,'ac',0.56820913),(20,'cg',0.32907207),(20,'ga',-0.8364568),(20,'gg',-0.7822076),
    (21,'tc',-1.029693),(22,'cg',0.85619782),(22,'ct',-0.4632077),(23,'aa',-0.5794924),
    (23,'ag',0.64907554),(24,'ag',-0.0773007),(24,'cg',0.28793562),(24,'tg',-0.2216372),
    (26,'gt',0.11787758),(28,'gg',-0.69774) ]
     
    gc_pars = [-0.2026259,-0.1665878]
    
    spacer = template[4:24]
    
    gc = (spacer.count('c') + spacer.count('g'))/len(spacer)
       
    score =  0.59763615

    if gc == 0.5:
        w_gc = gc_pars[0]
    else:
        w_gc = gc_pars[round(gc)]
    
    score += abs(0.5-gc)*w_gc*len(spacer)

    for base, subkmer, w in context_cases:
        if template[base:base+len(subkmer)] == subkmer:
            score += w
            
    return 1.0/(1.0+math.exp(-score))

 
print(score_template("tatagctgcgatctgaggtagggagggacc"))
print(score_template("tccgcacctgtcacggtcggggcttggcgc"))



     

  
    
     
          
           
    